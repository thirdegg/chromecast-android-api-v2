// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cast_channel.proto

package com.thirdegg.chromecast.api.v2;

public final class CastChannel {
  private CastChannel() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code com.thirdegg.chromecast.api.v2.SignatureAlgorithm}
   */
  public enum SignatureAlgorithm
          implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <code>RSASSA_PKCS1v15 = 1;</code>
     */
    RSASSA_PKCS1v15(1),
    /**
     * <code>RSASSA_PSS = 2;</code>
     */
    RSASSA_PSS(2),
    ;

    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <code>RSASSA_PKCS1v15 = 1;</code>
     */
    public static final int RSASSA_PKCS1v15_VALUE = 1;
    /**
     * <code>RSASSA_PSS = 2;</code>
     */
    public static final int RSASSA_PSS_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static SignatureAlgorithm valueOf(int value) {
      return forNumber(value);
    }

    public static SignatureAlgorithm forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return RSASSA_PKCS1v15;
        case 2: return RSASSA_PSS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            SignatureAlgorithm> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>() {
              public SignatureAlgorithm findValueByNumber(int number) {
                return SignatureAlgorithm.forNumber(number);
              }
            };

    private final int value;

    private SignatureAlgorithm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.thirdegg.chromecast.api.v2.SignatureAlgorithm)
  }

  public interface CastMessageOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.thirdegg.chromecast.api.v2.CastMessage)
          com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
     */
    boolean hasProtocolVersion();
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
     */
    CastMessage.ProtocolVersion getProtocolVersion();

    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    boolean hasSourceId();
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    String getSourceId();
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    com.google.protobuf.ByteString
    getSourceIdBytes();

    /**
     * <code>required string destination_id = 3;</code>
     */
    boolean hasDestinationId();
    /**
     * <code>required string destination_id = 3;</code>
     */
    String getDestinationId();
    /**
     * <code>required string destination_id = 3;</code>
     */
    com.google.protobuf.ByteString
    getDestinationIdBytes();

    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    boolean hasNamespace();
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    String getNamespace();
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    com.google.protobuf.ByteString
    getNamespaceBytes();

    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
     */
    boolean hasPayloadType();
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
     */
    CastMessage.PayloadType getPayloadType();

    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    boolean hasPayloadUtf8();
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    String getPayloadUtf8();
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    com.google.protobuf.ByteString
    getPayloadUtf8Bytes();

    /**
     * <code>optional bytes payload_binary = 7;</code>
     */
    boolean hasPayloadBinary();
    /**
     * <code>optional bytes payload_binary = 7;</code>
     */
    com.google.protobuf.ByteString getPayloadBinary();
  }
  /**
   * Protobuf type {@code com.thirdegg.chromecast.api.v2.CastMessage}
   */
  public  static final class CastMessage extends
          com.google.protobuf.GeneratedMessageLite<
                  CastMessage, CastMessage.Builder> implements
          // @@protoc_insertion_point(message_implements:com.thirdegg.chromecast.api.v2.CastMessage)
          CastMessageOrBuilder {
    private CastMessage() {
      sourceId_ = "";
      destinationId_ = "";
      namespace_ = "";
      payloadUtf8_ = "";
      payloadBinary_ = com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * Always pass a version of the protocol for future compatibility
     * requirements.
     * </pre>
     *
     * Protobuf enum {@code com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion}
     */
    public enum ProtocolVersion
            implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>CASTV2_1_0 = 0;</code>
       */
      CASTV2_1_0(0),
      ;

      /**
       * <code>CASTV2_1_0 = 0;</code>
       */
      public static final int CASTV2_1_0_VALUE = 0;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static ProtocolVersion valueOf(int value) {
        return forNumber(value);
      }

      public static ProtocolVersion forNumber(int value) {
        switch (value) {
          case 0: return CASTV2_1_0;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ProtocolVersion>
      internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
              ProtocolVersion> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ProtocolVersion>() {
                public ProtocolVersion findValueByNumber(int number) {
                  return ProtocolVersion.forNumber(number);
                }
              };

      private final int value;

      private ProtocolVersion(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion)
    }

    /**
     * <pre>
     * What type of data do we have in this message.
     * </pre>
     *
     * Protobuf enum {@code com.thirdegg.chromecast.api.v2.CastMessage.PayloadType}
     */
    public enum PayloadType
            implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>STRING = 0;</code>
       */
      STRING(0),
      /**
       * <code>BINARY = 1;</code>
       */
      BINARY(1),
      ;

      /**
       * <code>STRING = 0;</code>
       */
      public static final int STRING_VALUE = 0;
      /**
       * <code>BINARY = 1;</code>
       */
      public static final int BINARY_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static PayloadType valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadType forNumber(int value) {
        switch (value) {
          case 0: return STRING;
          case 1: return BINARY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PayloadType>
      internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
              PayloadType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<PayloadType>() {
                public PayloadType findValueByNumber(int number) {
                  return PayloadType.forNumber(number);
                }
              };

      private final int value;

      private PayloadType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.thirdegg.chromecast.api.v2.CastMessage.PayloadType)
    }

    private int bitField0_;
    public static final int PROTOCOL_VERSION_FIELD_NUMBER = 1;
    private int protocolVersion_;
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
     */
    public boolean hasProtocolVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
     */
    public ProtocolVersion getProtocolVersion() {
      ProtocolVersion result = ProtocolVersion.forNumber(protocolVersion_);
      return result == null ? ProtocolVersion.CASTV2_1_0 : result;
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
     */
    private void setProtocolVersion(ProtocolVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      protocolVersion_ = value.getNumber();
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
     */
    private void clearProtocolVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      protocolVersion_ = 0;
    }

    public static final int SOURCE_ID_FIELD_NUMBER = 2;
    private String sourceId_;
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    public boolean hasSourceId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    public String getSourceId() {
      return sourceId_;
    }
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    public com.google.protobuf.ByteString
    getSourceIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(sourceId_);
    }
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    private void setSourceId(
            String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      sourceId_ = value;
    }
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    private void clearSourceId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      sourceId_ = getDefaultInstance().getSourceId();
    }
    /**
     * <pre>
     * source and destination ids identify the origin and destination of the
     * message.  They are used to route messages between endpoints that share a
     * device-to-device channel.
     * For messages between applications:
     *   - The sender application id is a unique identifier generated on behalf of
     *     the sender application.
     *   - The receiver id is always the the session id for the application.
     * For messages to or from the sender or receiver platform, the special ids
     * 'sender-0' and 'receiver-0' can be used.
     * For messages intended for all endpoints using a given channel, the
     * wildcard destination_id '*' can be used.
     * </pre>
     *
     * <code>required string source_id = 2;</code>
     */
    private void setSourceIdBytes(
            com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      sourceId_ = value.toStringUtf8();
    }

    public static final int DESTINATION_ID_FIELD_NUMBER = 3;
    private String destinationId_;
    /**
     * <code>required string destination_id = 3;</code>
     */
    public boolean hasDestinationId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string destination_id = 3;</code>
     */
    public String getDestinationId() {
      return destinationId_;
    }
    /**
     * <code>required string destination_id = 3;</code>
     */
    public com.google.protobuf.ByteString
    getDestinationIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(destinationId_);
    }
    /**
     * <code>required string destination_id = 3;</code>
     */
    private void setDestinationId(
            String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      destinationId_ = value;
    }
    /**
     * <code>required string destination_id = 3;</code>
     */
    private void clearDestinationId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      destinationId_ = getDefaultInstance().getDestinationId();
    }
    /**
     * <code>required string destination_id = 3;</code>
     */
    private void setDestinationIdBytes(
            com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      destinationId_ = value.toStringUtf8();
    }

    public static final int NAMESPACE_FIELD_NUMBER = 4;
    private String namespace_;
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    public String getNamespace() {
      return namespace_;
    }
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    public com.google.protobuf.ByteString
    getNamespaceBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(namespace_);
    }
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    private void setNamespace(
            String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      namespace_ = value;
    }
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    private void clearNamespace() {
      bitField0_ = (bitField0_ & ~0x00000008);
      namespace_ = getDefaultInstance().getNamespace();
    }
    /**
     * <pre>
     * This is the core multiplexing key.  All messages are sent on a namespace
     * and endpoints sharing a channel listen on one or more namespaces.  The
     * namespace defines the protocol and semantics of the message.
     * </pre>
     *
     * <code>required string namespace = 4;</code>
     */
    private void setNamespaceBytes(
            com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      namespace_ = value.toStringUtf8();
    }

    public static final int PAYLOAD_TYPE_FIELD_NUMBER = 5;
    private int payloadType_;
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
     */
    public boolean hasPayloadType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
     */
    public PayloadType getPayloadType() {
      PayloadType result = PayloadType.forNumber(payloadType_);
      return result == null ? PayloadType.STRING : result;
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
     */
    private void setPayloadType(PayloadType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      payloadType_ = value.getNumber();
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
     */
    private void clearPayloadType() {
      bitField0_ = (bitField0_ & ~0x00000010);
      payloadType_ = 0;
    }

    public static final int PAYLOAD_UTF8_FIELD_NUMBER = 6;
    private String payloadUtf8_;
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    public boolean hasPayloadUtf8() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    public String getPayloadUtf8() {
      return payloadUtf8_;
    }
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    public com.google.protobuf.ByteString
    getPayloadUtf8Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(payloadUtf8_);
    }
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    private void setPayloadUtf8(
            String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      payloadUtf8_ = value;
    }
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    private void clearPayloadUtf8() {
      bitField0_ = (bitField0_ & ~0x00000020);
      payloadUtf8_ = getDefaultInstance().getPayloadUtf8();
    }
    /**
     * <pre>
     * Depending on payload_type, exactly one of the following optional fields
     * will always be set.
     * </pre>
     *
     * <code>optional string payload_utf8 = 6;</code>
     */
    private void setPayloadUtf8Bytes(
            com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      payloadUtf8_ = value.toStringUtf8();
    }

    public static final int PAYLOAD_BINARY_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString payloadBinary_;
    /**
     * <code>optional bytes payload_binary = 7;</code>
     */
    public boolean hasPayloadBinary() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes payload_binary = 7;</code>
     */
    public com.google.protobuf.ByteString getPayloadBinary() {
      return payloadBinary_;
    }
    /**
     * <code>optional bytes payload_binary = 7;</code>
     */
    private void setPayloadBinary(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      payloadBinary_ = value;
    }
    /**
     * <code>optional bytes payload_binary = 7;</code>
     */
    private void clearPayloadBinary() {
      bitField0_ = (bitField0_ & ~0x00000040);
      payloadBinary_ = getDefaultInstance().getPayloadBinary();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, protocolVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getSourceId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getDestinationId());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getNamespace());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, payloadType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getPayloadUtf8());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, payloadBinary_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, protocolVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeStringSize(2, getSourceId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeStringSize(3, getDestinationId());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeStringSize(4, getNamespace());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(5, payloadType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeStringSize(6, getPayloadUtf8());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(7, payloadBinary_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static CastMessage parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static CastMessage parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static CastMessage parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static CastMessage parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static CastMessage parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static CastMessage parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static CastMessage parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static CastMessage parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static CastMessage parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static CastMessage parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CastMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.thirdegg.chromecast.api.v2.CastMessage}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    CastMessage, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.thirdegg.chromecast.api.v2.CastMessage)
            CastMessageOrBuilder {
      // Construct using com.thirdegg.chromecast.api.v2.CastChannel.CastMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
       */
      public boolean hasProtocolVersion() {
        return instance.hasProtocolVersion();
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
       */
      public ProtocolVersion getProtocolVersion() {
        return instance.getProtocolVersion();
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
       */
      public Builder setProtocolVersion(ProtocolVersion value) {
        copyOnWrite();
        instance.setProtocolVersion(value);
        return this;
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.ProtocolVersion protocol_version = 1;</code>
       */
      public Builder clearProtocolVersion() {
        copyOnWrite();
        instance.clearProtocolVersion();
        return this;
      }

      /**
       * <pre>
       * source and destination ids identify the origin and destination of the
       * message.  They are used to route messages between endpoints that share a
       * device-to-device channel.
       * For messages between applications:
       *   - The sender application id is a unique identifier generated on behalf of
       *     the sender application.
       *   - The receiver id is always the the session id for the application.
       * For messages to or from the sender or receiver platform, the special ids
       * 'sender-0' and 'receiver-0' can be used.
       * For messages intended for all endpoints using a given channel, the
       * wildcard destination_id '*' can be used.
       * </pre>
       *
       * <code>required string source_id = 2;</code>
       */
      public boolean hasSourceId() {
        return instance.hasSourceId();
      }
      /**
       * <pre>
       * source and destination ids identify the origin and destination of the
       * message.  They are used to route messages between endpoints that share a
       * device-to-device channel.
       * For messages between applications:
       *   - The sender application id is a unique identifier generated on behalf of
       *     the sender application.
       *   - The receiver id is always the the session id for the application.
       * For messages to or from the sender or receiver platform, the special ids
       * 'sender-0' and 'receiver-0' can be used.
       * For messages intended for all endpoints using a given channel, the
       * wildcard destination_id '*' can be used.
       * </pre>
       *
       * <code>required string source_id = 2;</code>
       */
      public String getSourceId() {
        return instance.getSourceId();
      }
      /**
       * <pre>
       * source and destination ids identify the origin and destination of the
       * message.  They are used to route messages between endpoints that share a
       * device-to-device channel.
       * For messages between applications:
       *   - The sender application id is a unique identifier generated on behalf of
       *     the sender application.
       *   - The receiver id is always the the session id for the application.
       * For messages to or from the sender or receiver platform, the special ids
       * 'sender-0' and 'receiver-0' can be used.
       * For messages intended for all endpoints using a given channel, the
       * wildcard destination_id '*' can be used.
       * </pre>
       *
       * <code>required string source_id = 2;</code>
       */
      public com.google.protobuf.ByteString
      getSourceIdBytes() {
        return instance.getSourceIdBytes();
      }
      /**
       * <pre>
       * source and destination ids identify the origin and destination of the
       * message.  They are used to route messages between endpoints that share a
       * device-to-device channel.
       * For messages between applications:
       *   - The sender application id is a unique identifier generated on behalf of
       *     the sender application.
       *   - The receiver id is always the the session id for the application.
       * For messages to or from the sender or receiver platform, the special ids
       * 'sender-0' and 'receiver-0' can be used.
       * For messages intended for all endpoints using a given channel, the
       * wildcard destination_id '*' can be used.
       * </pre>
       *
       * <code>required string source_id = 2;</code>
       */
      public Builder setSourceId(
              String value) {
        copyOnWrite();
        instance.setSourceId(value);
        return this;
      }
      /**
       * <pre>
       * source and destination ids identify the origin and destination of the
       * message.  They are used to route messages between endpoints that share a
       * device-to-device channel.
       * For messages between applications:
       *   - The sender application id is a unique identifier generated on behalf of
       *     the sender application.
       *   - The receiver id is always the the session id for the application.
       * For messages to or from the sender or receiver platform, the special ids
       * 'sender-0' and 'receiver-0' can be used.
       * For messages intended for all endpoints using a given channel, the
       * wildcard destination_id '*' can be used.
       * </pre>
       *
       * <code>required string source_id = 2;</code>
       */
      public Builder clearSourceId() {
        copyOnWrite();
        instance.clearSourceId();
        return this;
      }
      /**
       * <pre>
       * source and destination ids identify the origin and destination of the
       * message.  They are used to route messages between endpoints that share a
       * device-to-device channel.
       * For messages between applications:
       *   - The sender application id is a unique identifier generated on behalf of
       *     the sender application.
       *   - The receiver id is always the the session id for the application.
       * For messages to or from the sender or receiver platform, the special ids
       * 'sender-0' and 'receiver-0' can be used.
       * For messages intended for all endpoints using a given channel, the
       * wildcard destination_id '*' can be used.
       * </pre>
       *
       * <code>required string source_id = 2;</code>
       */
      public Builder setSourceIdBytes(
              com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSourceIdBytes(value);
        return this;
      }

      /**
       * <code>required string destination_id = 3;</code>
       */
      public boolean hasDestinationId() {
        return instance.hasDestinationId();
      }
      /**
       * <code>required string destination_id = 3;</code>
       */
      public String getDestinationId() {
        return instance.getDestinationId();
      }
      /**
       * <code>required string destination_id = 3;</code>
       */
      public com.google.protobuf.ByteString
      getDestinationIdBytes() {
        return instance.getDestinationIdBytes();
      }
      /**
       * <code>required string destination_id = 3;</code>
       */
      public Builder setDestinationId(
              String value) {
        copyOnWrite();
        instance.setDestinationId(value);
        return this;
      }
      /**
       * <code>required string destination_id = 3;</code>
       */
      public Builder clearDestinationId() {
        copyOnWrite();
        instance.clearDestinationId();
        return this;
      }
      /**
       * <code>required string destination_id = 3;</code>
       */
      public Builder setDestinationIdBytes(
              com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDestinationIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * This is the core multiplexing key.  All messages are sent on a namespace
       * and endpoints sharing a channel listen on one or more namespaces.  The
       * namespace defines the protocol and semantics of the message.
       * </pre>
       *
       * <code>required string namespace = 4;</code>
       */
      public boolean hasNamespace() {
        return instance.hasNamespace();
      }
      /**
       * <pre>
       * This is the core multiplexing key.  All messages are sent on a namespace
       * and endpoints sharing a channel listen on one or more namespaces.  The
       * namespace defines the protocol and semantics of the message.
       * </pre>
       *
       * <code>required string namespace = 4;</code>
       */
      public String getNamespace() {
        return instance.getNamespace();
      }
      /**
       * <pre>
       * This is the core multiplexing key.  All messages are sent on a namespace
       * and endpoints sharing a channel listen on one or more namespaces.  The
       * namespace defines the protocol and semantics of the message.
       * </pre>
       *
       * <code>required string namespace = 4;</code>
       */
      public com.google.protobuf.ByteString
      getNamespaceBytes() {
        return instance.getNamespaceBytes();
      }
      /**
       * <pre>
       * This is the core multiplexing key.  All messages are sent on a namespace
       * and endpoints sharing a channel listen on one or more namespaces.  The
       * namespace defines the protocol and semantics of the message.
       * </pre>
       *
       * <code>required string namespace = 4;</code>
       */
      public Builder setNamespace(
              String value) {
        copyOnWrite();
        instance.setNamespace(value);
        return this;
      }
      /**
       * <pre>
       * This is the core multiplexing key.  All messages are sent on a namespace
       * and endpoints sharing a channel listen on one or more namespaces.  The
       * namespace defines the protocol and semantics of the message.
       * </pre>
       *
       * <code>required string namespace = 4;</code>
       */
      public Builder clearNamespace() {
        copyOnWrite();
        instance.clearNamespace();
        return this;
      }
      /**
       * <pre>
       * This is the core multiplexing key.  All messages are sent on a namespace
       * and endpoints sharing a channel listen on one or more namespaces.  The
       * namespace defines the protocol and semantics of the message.
       * </pre>
       *
       * <code>required string namespace = 4;</code>
       */
      public Builder setNamespaceBytes(
              com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNamespaceBytes(value);
        return this;
      }

      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
       */
      public boolean hasPayloadType() {
        return instance.hasPayloadType();
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
       */
      public PayloadType getPayloadType() {
        return instance.getPayloadType();
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
       */
      public Builder setPayloadType(PayloadType value) {
        copyOnWrite();
        instance.setPayloadType(value);
        return this;
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.CastMessage.PayloadType payload_type = 5;</code>
       */
      public Builder clearPayloadType() {
        copyOnWrite();
        instance.clearPayloadType();
        return this;
      }

      /**
       * <pre>
       * Depending on payload_type, exactly one of the following optional fields
       * will always be set.
       * </pre>
       *
       * <code>optional string payload_utf8 = 6;</code>
       */
      public boolean hasPayloadUtf8() {
        return instance.hasPayloadUtf8();
      }
      /**
       * <pre>
       * Depending on payload_type, exactly one of the following optional fields
       * will always be set.
       * </pre>
       *
       * <code>optional string payload_utf8 = 6;</code>
       */
      public String getPayloadUtf8() {
        return instance.getPayloadUtf8();
      }
      /**
       * <pre>
       * Depending on payload_type, exactly one of the following optional fields
       * will always be set.
       * </pre>
       *
       * <code>optional string payload_utf8 = 6;</code>
       */
      public com.google.protobuf.ByteString
      getPayloadUtf8Bytes() {
        return instance.getPayloadUtf8Bytes();
      }
      /**
       * <pre>
       * Depending on payload_type, exactly one of the following optional fields
       * will always be set.
       * </pre>
       *
       * <code>optional string payload_utf8 = 6;</code>
       */
      public Builder setPayloadUtf8(
              String value) {
        copyOnWrite();
        instance.setPayloadUtf8(value);
        return this;
      }
      /**
       * <pre>
       * Depending on payload_type, exactly one of the following optional fields
       * will always be set.
       * </pre>
       *
       * <code>optional string payload_utf8 = 6;</code>
       */
      public Builder clearPayloadUtf8() {
        copyOnWrite();
        instance.clearPayloadUtf8();
        return this;
      }
      /**
       * <pre>
       * Depending on payload_type, exactly one of the following optional fields
       * will always be set.
       * </pre>
       *
       * <code>optional string payload_utf8 = 6;</code>
       */
      public Builder setPayloadUtf8Bytes(
              com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPayloadUtf8Bytes(value);
        return this;
      }

      /**
       * <code>optional bytes payload_binary = 7;</code>
       */
      public boolean hasPayloadBinary() {
        return instance.hasPayloadBinary();
      }
      /**
       * <code>optional bytes payload_binary = 7;</code>
       */
      public com.google.protobuf.ByteString getPayloadBinary() {
        return instance.getPayloadBinary();
      }
      /**
       * <code>optional bytes payload_binary = 7;</code>
       */
      public Builder setPayloadBinary(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPayloadBinary(value);
        return this;
      }
      /**
       * <code>optional bytes payload_binary = 7;</code>
       */
      public Builder clearPayloadBinary() {
        copyOnWrite();
        instance.clearPayloadBinary();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.thirdegg.chromecast.api.v2.CastMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new CastMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasProtocolVersion()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSourceId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasDestinationId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNamespace()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPayloadType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          CastMessage other = (CastMessage) arg1;
          protocolVersion_ = visitor.visitInt(hasProtocolVersion(), protocolVersion_,
                  other.hasProtocolVersion(), other.protocolVersion_);
          sourceId_ = visitor.visitString(
                  hasSourceId(), sourceId_,
                  other.hasSourceId(), other.sourceId_);
          destinationId_ = visitor.visitString(
                  hasDestinationId(), destinationId_,
                  other.hasDestinationId(), other.destinationId_);
          namespace_ = visitor.visitString(
                  hasNamespace(), namespace_,
                  other.hasNamespace(), other.namespace_);
          payloadType_ = visitor.visitInt(hasPayloadType(), payloadType_,
                  other.hasPayloadType(), other.payloadType_);
          payloadUtf8_ = visitor.visitString(
                  hasPayloadUtf8(), payloadUtf8_,
                  other.hasPayloadUtf8(), other.payloadUtf8_);
          payloadBinary_ = visitor.visitByteString(
                  hasPayloadBinary(), payloadBinary_,
                  other.hasPayloadBinary(), other.payloadBinary_);
          if (visitor == MergeFromVisitor
                  .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
                  (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                  (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  ProtocolVersion value = ProtocolVersion.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    protocolVersion_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  sourceId_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  destinationId_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  namespace_ = s;
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  PayloadType value = PayloadType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000010;
                    payloadType_ = rawValue;
                  }
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  payloadUtf8_ = s;
                  break;
                }
                case 58: {
                  bitField0_ |= 0x00000040;
                  payloadBinary_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                    new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (CastMessage.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.thirdegg.chromecast.api.v2.CastMessage)
    private static final CastMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CastMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static CastMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CastMessage> PARSER;

    public static com.google.protobuf.Parser<CastMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthChallengeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.thirdegg.chromecast.api.v2.AuthChallenge)
          com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
     */
    boolean hasSignatureAlgorithm();
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
     */
    SignatureAlgorithm getSignatureAlgorithm();
  }
  /**
   * <pre>
   * Messages for authentication protocol between a sender and a receiver.
   * </pre>
   *
   * Protobuf type {@code com.thirdegg.chromecast.api.v2.AuthChallenge}
   */
  public  static final class AuthChallenge extends
          com.google.protobuf.GeneratedMessageLite<
                  AuthChallenge, AuthChallenge.Builder> implements
          // @@protoc_insertion_point(message_implements:com.thirdegg.chromecast.api.v2.AuthChallenge)
          AuthChallengeOrBuilder {
    private AuthChallenge() {
      signatureAlgorithm_ = 1;
    }
    private int bitField0_;
    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 1;
    private int signatureAlgorithm_;
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
     */
    public boolean hasSignatureAlgorithm() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
     */
    public SignatureAlgorithm getSignatureAlgorithm() {
      SignatureAlgorithm result = SignatureAlgorithm.forNumber(signatureAlgorithm_);
      return result == null ? SignatureAlgorithm.RSASSA_PKCS1v15 : result;
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
     */
    private void setSignatureAlgorithm(SignatureAlgorithm value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      signatureAlgorithm_ = value.getNumber();
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
     */
    private void clearSignatureAlgorithm() {
      bitField0_ = (bitField0_ & ~0x00000001);
      signatureAlgorithm_ = 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, signatureAlgorithm_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, signatureAlgorithm_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static AuthChallenge parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static AuthChallenge parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static AuthChallenge parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static AuthChallenge parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static AuthChallenge parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static AuthChallenge parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static AuthChallenge parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static AuthChallenge parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static AuthChallenge parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static AuthChallenge parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(AuthChallenge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Messages for authentication protocol between a sender and a receiver.
     * </pre>
     *
     * Protobuf type {@code com.thirdegg.chromecast.api.v2.AuthChallenge}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    AuthChallenge, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.thirdegg.chromecast.api.v2.AuthChallenge)
            AuthChallengeOrBuilder {
      // Construct using com.thirdegg.chromecast.api.v2.CastChannel.AuthChallenge.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
       */
      public boolean hasSignatureAlgorithm() {
        return instance.hasSignatureAlgorithm();
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
       */
      public SignatureAlgorithm getSignatureAlgorithm() {
        return instance.getSignatureAlgorithm();
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
       */
      public Builder setSignatureAlgorithm(SignatureAlgorithm value) {
        copyOnWrite();
        instance.setSignatureAlgorithm(value);
        return this;
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 1 [default = RSASSA_PKCS1v15];</code>
       */
      public Builder clearSignatureAlgorithm() {
        copyOnWrite();
        instance.clearSignatureAlgorithm();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.thirdegg.chromecast.api.v2.AuthChallenge)
    }
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new AuthChallenge();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          AuthChallenge other = (AuthChallenge) arg1;
          signatureAlgorithm_ = visitor.visitInt(hasSignatureAlgorithm(), signatureAlgorithm_,
                  other.hasSignatureAlgorithm(), other.signatureAlgorithm_);
          if (visitor == MergeFromVisitor
                  .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
                  (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                  (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  SignatureAlgorithm value = SignatureAlgorithm.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    signatureAlgorithm_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                    new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (AuthChallenge.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.thirdegg.chromecast.api.v2.AuthChallenge)
    private static final AuthChallenge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AuthChallenge();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static AuthChallenge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AuthChallenge> PARSER;

    public static com.google.protobuf.Parser<AuthChallenge> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.thirdegg.chromecast.api.v2.AuthResponse)
          com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bytes signature = 1;</code>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 1;</code>
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <code>required bytes client_auth_certificate = 2;</code>
     */
    boolean hasClientAuthCertificate();
    /**
     * <code>required bytes client_auth_certificate = 2;</code>
     */
    com.google.protobuf.ByteString getClientAuthCertificate();

    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getIntermediateCertificateList();
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    int getIntermediateCertificateCount();
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    com.google.protobuf.ByteString getIntermediateCertificate(int index);

    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
     */
    boolean hasSignatureAlgorithm();
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
     */
    SignatureAlgorithm getSignatureAlgorithm();
  }
  /**
   * Protobuf type {@code com.thirdegg.chromecast.api.v2.AuthResponse}
   */
  public  static final class AuthResponse extends
          com.google.protobuf.GeneratedMessageLite<
                  AuthResponse, AuthResponse.Builder> implements
          // @@protoc_insertion_point(message_implements:com.thirdegg.chromecast.api.v2.AuthResponse)
          AuthResponseOrBuilder {
    private AuthResponse() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
      clientAuthCertificate_ = com.google.protobuf.ByteString.EMPTY;
      intermediateCertificate_ = emptyProtobufList();
      signatureAlgorithm_ = 1;
    }
    private int bitField0_;
    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 1;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes signature = 1;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }
    /**
     * <code>required bytes signature = 1;</code>
     */
    private void setSignature(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      signature_ = value;
    }
    /**
     * <code>required bytes signature = 1;</code>
     */
    private void clearSignature() {
      bitField0_ = (bitField0_ & ~0x00000001);
      signature_ = getDefaultInstance().getSignature();
    }

    public static final int CLIENT_AUTH_CERTIFICATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString clientAuthCertificate_;
    /**
     * <code>required bytes client_auth_certificate = 2;</code>
     */
    public boolean hasClientAuthCertificate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes client_auth_certificate = 2;</code>
     */
    public com.google.protobuf.ByteString getClientAuthCertificate() {
      return clientAuthCertificate_;
    }
    /**
     * <code>required bytes client_auth_certificate = 2;</code>
     */
    private void setClientAuthCertificate(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      clientAuthCertificate_ = value;
    }
    /**
     * <code>required bytes client_auth_certificate = 2;</code>
     */
    private void clearClientAuthCertificate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      clientAuthCertificate_ = getDefaultInstance().getClientAuthCertificate();
    }

    public static final int INTERMEDIATE_CERTIFICATE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> intermediateCertificate_;
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
    getIntermediateCertificateList() {
      return intermediateCertificate_;
    }
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    public int getIntermediateCertificateCount() {
      return intermediateCertificate_.size();
    }
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    public com.google.protobuf.ByteString getIntermediateCertificate(int index) {
      return intermediateCertificate_.get(index);
    }
    private void ensureIntermediateCertificateIsMutable() {
      if (!intermediateCertificate_.isModifiable()) {
        intermediateCertificate_ =
                com.google.protobuf.GeneratedMessageLite.mutableCopy(intermediateCertificate_);
      }
    }
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    private void setIntermediateCertificate(
            int index, com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIntermediateCertificateIsMutable();
      intermediateCertificate_.set(index, value);
    }
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    private void addIntermediateCertificate(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIntermediateCertificateIsMutable();
      intermediateCertificate_.add(value);
    }
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    private void addAllIntermediateCertificate(
            Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureIntermediateCertificateIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
              values, intermediateCertificate_);
    }
    /**
     * <code>repeated bytes intermediate_certificate = 3;</code>
     */
    private void clearIntermediateCertificate() {
      intermediateCertificate_ = emptyProtobufList();
    }

    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 4;
    private int signatureAlgorithm_;
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
     */
    public boolean hasSignatureAlgorithm() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
     */
    public SignatureAlgorithm getSignatureAlgorithm() {
      SignatureAlgorithm result = SignatureAlgorithm.forNumber(signatureAlgorithm_);
      return result == null ? SignatureAlgorithm.RSASSA_PKCS1v15 : result;
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
     */
    private void setSignatureAlgorithm(SignatureAlgorithm value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      signatureAlgorithm_ = value.getNumber();
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
     */
    private void clearSignatureAlgorithm() {
      bitField0_ = (bitField0_ & ~0x00000004);
      signatureAlgorithm_ = 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, signature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, clientAuthCertificate_);
      }
      for (int i = 0; i < intermediateCertificate_.size(); i++) {
        output.writeBytes(3, intermediateCertificate_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, signatureAlgorithm_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(1, signature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(2, clientAuthCertificate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intermediateCertificate_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeBytesSizeNoTag(intermediateCertificate_.get(i));
        }
        size += dataSize;
        size += 1 * getIntermediateCertificateList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(4, signatureAlgorithm_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static AuthResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static AuthResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static AuthResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static AuthResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static AuthResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static AuthResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static AuthResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static AuthResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static AuthResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static AuthResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(AuthResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.thirdegg.chromecast.api.v2.AuthResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    AuthResponse, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.thirdegg.chromecast.api.v2.AuthResponse)
            AuthResponseOrBuilder {
      // Construct using com.thirdegg.chromecast.api.v2.CastChannel.AuthResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bytes signature = 1;</code>
       */
      public boolean hasSignature() {
        return instance.hasSignature();
      }
      /**
       * <code>required bytes signature = 1;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return instance.getSignature();
      }
      /**
       * <code>required bytes signature = 1;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignature(value);
        return this;
      }
      /**
       * <code>required bytes signature = 1;</code>
       */
      public Builder clearSignature() {
        copyOnWrite();
        instance.clearSignature();
        return this;
      }

      /**
       * <code>required bytes client_auth_certificate = 2;</code>
       */
      public boolean hasClientAuthCertificate() {
        return instance.hasClientAuthCertificate();
      }
      /**
       * <code>required bytes client_auth_certificate = 2;</code>
       */
      public com.google.protobuf.ByteString getClientAuthCertificate() {
        return instance.getClientAuthCertificate();
      }
      /**
       * <code>required bytes client_auth_certificate = 2;</code>
       */
      public Builder setClientAuthCertificate(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientAuthCertificate(value);
        return this;
      }
      /**
       * <code>required bytes client_auth_certificate = 2;</code>
       */
      public Builder clearClientAuthCertificate() {
        copyOnWrite();
        instance.clearClientAuthCertificate();
        return this;
      }

      /**
       * <code>repeated bytes intermediate_certificate = 3;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
      getIntermediateCertificateList() {
        return java.util.Collections.unmodifiableList(
                instance.getIntermediateCertificateList());
      }
      /**
       * <code>repeated bytes intermediate_certificate = 3;</code>
       */
      public int getIntermediateCertificateCount() {
        return instance.getIntermediateCertificateCount();
      }
      /**
       * <code>repeated bytes intermediate_certificate = 3;</code>
       */
      public com.google.protobuf.ByteString getIntermediateCertificate(int index) {
        return instance.getIntermediateCertificate(index);
      }
      /**
       * <code>repeated bytes intermediate_certificate = 3;</code>
       */
      public Builder setIntermediateCertificate(
              int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIntermediateCertificate(index, value);
        return this;
      }
      /**
       * <code>repeated bytes intermediate_certificate = 3;</code>
       */
      public Builder addIntermediateCertificate(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addIntermediateCertificate(value);
        return this;
      }
      /**
       * <code>repeated bytes intermediate_certificate = 3;</code>
       */
      public Builder addAllIntermediateCertificate(
              Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllIntermediateCertificate(values);
        return this;
      }
      /**
       * <code>repeated bytes intermediate_certificate = 3;</code>
       */
      public Builder clearIntermediateCertificate() {
        copyOnWrite();
        instance.clearIntermediateCertificate();
        return this;
      }

      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
       */
      public boolean hasSignatureAlgorithm() {
        return instance.hasSignatureAlgorithm();
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
       */
      public SignatureAlgorithm getSignatureAlgorithm() {
        return instance.getSignatureAlgorithm();
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
       */
      public Builder setSignatureAlgorithm(SignatureAlgorithm value) {
        copyOnWrite();
        instance.setSignatureAlgorithm(value);
        return this;
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.SignatureAlgorithm signature_algorithm = 4 [default = RSASSA_PKCS1v15];</code>
       */
      public Builder clearSignatureAlgorithm() {
        copyOnWrite();
        instance.clearSignatureAlgorithm();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.thirdegg.chromecast.api.v2.AuthResponse)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new AuthResponse();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasSignature()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasClientAuthCertificate()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          intermediateCertificate_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          AuthResponse other = (AuthResponse) arg1;
          signature_ = visitor.visitByteString(
                  hasSignature(), signature_,
                  other.hasSignature(), other.signature_);
          clientAuthCertificate_ = visitor.visitByteString(
                  hasClientAuthCertificate(), clientAuthCertificate_,
                  other.hasClientAuthCertificate(), other.clientAuthCertificate_);
          intermediateCertificate_= visitor.visitList(intermediateCertificate_, other.intermediateCertificate_);
          signatureAlgorithm_ = visitor.visitInt(hasSignatureAlgorithm(), signatureAlgorithm_,
                  other.hasSignatureAlgorithm(), other.signatureAlgorithm_);
          if (visitor == MergeFromVisitor
                  .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
                  (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                  (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  signature_ = input.readBytes();
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  clientAuthCertificate_ = input.readBytes();
                  break;
                }
                case 26: {
                  if (!intermediateCertificate_.isModifiable()) {
                    intermediateCertificate_ =
                            com.google.protobuf.GeneratedMessageLite.mutableCopy(intermediateCertificate_);
                  }
                  intermediateCertificate_.add(input.readBytes());
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  SignatureAlgorithm value = SignatureAlgorithm.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    signatureAlgorithm_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                    new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (AuthResponse.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.thirdegg.chromecast.api.v2.AuthResponse)
    private static final AuthResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AuthResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static AuthResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AuthResponse> PARSER;

    public static com.google.protobuf.Parser<AuthResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthErrorOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.thirdegg.chromecast.api.v2.AuthError)
          com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
     */
    boolean hasErrorType();
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
     */
    AuthError.ErrorType getErrorType();
  }
  /**
   * Protobuf type {@code com.thirdegg.chromecast.api.v2.AuthError}
   */
  public  static final class AuthError extends
          com.google.protobuf.GeneratedMessageLite<
                  AuthError, AuthError.Builder> implements
          // @@protoc_insertion_point(message_implements:com.thirdegg.chromecast.api.v2.AuthError)
          AuthErrorOrBuilder {
    private AuthError() {
    }
    /**
     * Protobuf enum {@code com.thirdegg.chromecast.api.v2.AuthError.ErrorType}
     */
    public enum ErrorType
            implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>INTERNAL_ERROR = 0;</code>
       */
      INTERNAL_ERROR(0),
      /**
       * <pre>
       * The underlying connection is not TLS
       * </pre>
       *
       * <code>NO_TLS = 1;</code>
       */
      NO_TLS(1),
      /**
       * <code>SIGNATURE_ALGORITHM_UNAVAILABLE = 2;</code>
       */
      SIGNATURE_ALGORITHM_UNAVAILABLE(2),
      ;

      /**
       * <code>INTERNAL_ERROR = 0;</code>
       */
      public static final int INTERNAL_ERROR_VALUE = 0;
      /**
       * <pre>
       * The underlying connection is not TLS
       * </pre>
       *
       * <code>NO_TLS = 1;</code>
       */
      public static final int NO_TLS_VALUE = 1;
      /**
       * <code>SIGNATURE_ALGORITHM_UNAVAILABLE = 2;</code>
       */
      public static final int SIGNATURE_ALGORITHM_UNAVAILABLE_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static ErrorType valueOf(int value) {
        return forNumber(value);
      }

      public static ErrorType forNumber(int value) {
        switch (value) {
          case 0: return INTERNAL_ERROR;
          case 1: return NO_TLS;
          case 2: return SIGNATURE_ALGORITHM_UNAVAILABLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
      internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
              ErrorType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
                public ErrorType findValueByNumber(int number) {
                  return ErrorType.forNumber(number);
                }
              };

      private final int value;

      private ErrorType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.thirdegg.chromecast.api.v2.AuthError.ErrorType)
    }

    private int bitField0_;
    public static final int ERROR_TYPE_FIELD_NUMBER = 1;
    private int errorType_;
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
     */
    public boolean hasErrorType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
     */
    public ErrorType getErrorType() {
      ErrorType result = ErrorType.forNumber(errorType_);
      return result == null ? ErrorType.INTERNAL_ERROR : result;
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
     */
    private void setErrorType(ErrorType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      errorType_ = value.getNumber();
    }
    /**
     * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
     */
    private void clearErrorType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      errorType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, errorType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, errorType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static AuthError parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static AuthError parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static AuthError parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static AuthError parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static AuthError parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static AuthError parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static AuthError parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static AuthError parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static AuthError parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static AuthError parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(AuthError prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.thirdegg.chromecast.api.v2.AuthError}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    AuthError, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.thirdegg.chromecast.api.v2.AuthError)
            AuthErrorOrBuilder {
      // Construct using com.thirdegg.chromecast.api.v2.CastChannel.AuthError.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
       */
      public boolean hasErrorType() {
        return instance.hasErrorType();
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
       */
      public ErrorType getErrorType() {
        return instance.getErrorType();
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
       */
      public Builder setErrorType(ErrorType value) {
        copyOnWrite();
        instance.setErrorType(value);
        return this;
      }
      /**
       * <code>required .com.thirdegg.chromecast.api.v2.AuthError.ErrorType error_type = 1;</code>
       */
      public Builder clearErrorType() {
        copyOnWrite();
        instance.clearErrorType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.thirdegg.chromecast.api.v2.AuthError)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new AuthError();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasErrorType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          AuthError other = (AuthError) arg1;
          errorType_ = visitor.visitInt(hasErrorType(), errorType_,
                  other.hasErrorType(), other.errorType_);
          if (visitor == MergeFromVisitor
                  .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
                  (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                  (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  ErrorType value = ErrorType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    errorType_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                    new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (AuthError.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.thirdegg.chromecast.api.v2.AuthError)
    private static final AuthError DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AuthError();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static AuthError getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AuthError> PARSER;

    public static com.google.protobuf.Parser<AuthError> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DeviceAuthMessageOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.thirdegg.chromecast.api.v2.DeviceAuthMessage)
          com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    boolean hasChallenge();
    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    AuthChallenge getChallenge();

    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    AuthResponse getResponse();

    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    boolean hasError();
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    AuthError getError();
  }
  /**
   * Protobuf type {@code com.thirdegg.chromecast.api.v2.DeviceAuthMessage}
   */
  public  static final class DeviceAuthMessage extends
          com.google.protobuf.GeneratedMessageLite<
                  DeviceAuthMessage, DeviceAuthMessage.Builder> implements
          // @@protoc_insertion_point(message_implements:com.thirdegg.chromecast.api.v2.DeviceAuthMessage)
          DeviceAuthMessageOrBuilder {
    private DeviceAuthMessage() {
    }
    private int bitField0_;
    public static final int CHALLENGE_FIELD_NUMBER = 1;
    private AuthChallenge challenge_;
    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    public boolean hasChallenge() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    public AuthChallenge getChallenge() {
      return challenge_ == null ? AuthChallenge.getDefaultInstance() : challenge_;
    }
    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    private void setChallenge(AuthChallenge value) {
      if (value == null) {
        throw new NullPointerException();
      }
      challenge_ = value;
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    private void setChallenge(
            AuthChallenge.Builder builderForValue) {
      challenge_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    private void mergeChallenge(AuthChallenge value) {
      if (challenge_ != null &&
              challenge_ != AuthChallenge.getDefaultInstance()) {
        challenge_ =
                AuthChallenge.newBuilder(challenge_).mergeFrom(value).buildPartial();
      } else {
        challenge_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Request fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
     */
    private void clearChallenge() {  challenge_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int RESPONSE_FIELD_NUMBER = 2;
    private AuthResponse response_;
    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    public boolean hasResponse() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    public AuthResponse getResponse() {
      return response_ == null ? AuthResponse.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    private void setResponse(AuthResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    private void setResponse(
            AuthResponse.Builder builderForValue) {
      response_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    private void mergeResponse(AuthResponse value) {
      if (response_ != null &&
              response_ != AuthResponse.getDefaultInstance()) {
        response_ =
                AuthResponse.newBuilder(response_).mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Response fields
     * </pre>
     *
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
     */
    private void clearResponse() {  response_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int ERROR_FIELD_NUMBER = 3;
    private AuthError error_;
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    public AuthError getError() {
      return error_ == null ? AuthError.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    private void setError(AuthError value) {
      if (value == null) {
        throw new NullPointerException();
      }
      error_ = value;
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    private void setError(
            AuthError.Builder builderForValue) {
      error_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    private void mergeError(AuthError value) {
      if (error_ != null &&
              error_ != AuthError.getDefaultInstance()) {
        error_ =
                AuthError.newBuilder(error_).mergeFrom(value).buildPartial();
      } else {
        error_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
     */
    private void clearError() {  error_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getChallenge());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getResponse());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getError());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, getChallenge());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, getResponse());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(3, getError());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static DeviceAuthMessage parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static DeviceAuthMessage parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static DeviceAuthMessage parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
    }
    public static DeviceAuthMessage parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static DeviceAuthMessage parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static DeviceAuthMessage parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static DeviceAuthMessage parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static DeviceAuthMessage parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static DeviceAuthMessage parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
    }
    public static DeviceAuthMessage parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DeviceAuthMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.thirdegg.chromecast.api.v2.DeviceAuthMessage}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    DeviceAuthMessage, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.thirdegg.chromecast.api.v2.DeviceAuthMessage)
            DeviceAuthMessageOrBuilder {
      // Construct using com.thirdegg.chromecast.api.v2.CastChannel.DeviceAuthMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Request fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
       */
      public boolean hasChallenge() {
        return instance.hasChallenge();
      }
      /**
       * <pre>
       * Request fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
       */
      public AuthChallenge getChallenge() {
        return instance.getChallenge();
      }
      /**
       * <pre>
       * Request fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
       */
      public Builder setChallenge(AuthChallenge value) {
        copyOnWrite();
        instance.setChallenge(value);
        return this;
      }
      /**
       * <pre>
       * Request fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
       */
      public Builder setChallenge(
              AuthChallenge.Builder builderForValue) {
        copyOnWrite();
        instance.setChallenge(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Request fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
       */
      public Builder mergeChallenge(AuthChallenge value) {
        copyOnWrite();
        instance.mergeChallenge(value);
        return this;
      }
      /**
       * <pre>
       * Request fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthChallenge challenge = 1;</code>
       */
      public Builder clearChallenge() {  copyOnWrite();
        instance.clearChallenge();
        return this;
      }

      /**
       * <pre>
       * Response fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
       */
      public boolean hasResponse() {
        return instance.hasResponse();
      }
      /**
       * <pre>
       * Response fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
       */
      public AuthResponse getResponse() {
        return instance.getResponse();
      }
      /**
       * <pre>
       * Response fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
       */
      public Builder setResponse(AuthResponse value) {
        copyOnWrite();
        instance.setResponse(value);
        return this;
      }
      /**
       * <pre>
       * Response fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
       */
      public Builder setResponse(
              AuthResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Response fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
       */
      public Builder mergeResponse(AuthResponse value) {
        copyOnWrite();
        instance.mergeResponse(value);
        return this;
      }
      /**
       * <pre>
       * Response fields
       * </pre>
       *
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthResponse response = 2;</code>
       */
      public Builder clearResponse() {  copyOnWrite();
        instance.clearResponse();
        return this;
      }

      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
       */
      public boolean hasError() {
        return instance.hasError();
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
       */
      public AuthError getError() {
        return instance.getError();
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
       */
      public Builder setError(AuthError value) {
        copyOnWrite();
        instance.setError(value);
        return this;
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
       */
      public Builder setError(
              AuthError.Builder builderForValue) {
        copyOnWrite();
        instance.setError(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
       */
      public Builder mergeError(AuthError value) {
        copyOnWrite();
        instance.mergeError(value);
        return this;
      }
      /**
       * <code>optional .com.thirdegg.chromecast.api.v2.AuthError error = 3;</code>
       */
      public Builder clearError() {  copyOnWrite();
        instance.clearError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.thirdegg.chromecast.api.v2.DeviceAuthMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new DeviceAuthMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasResponse()) {
            if (!getResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasError()) {
            if (!getError().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          DeviceAuthMessage other = (DeviceAuthMessage) arg1;
          challenge_ = visitor.visitMessage(challenge_, other.challenge_);
          response_ = visitor.visitMessage(response_, other.response_);
          error_ = visitor.visitMessage(error_, other.error_);
          if (visitor == MergeFromVisitor
                  .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
                  (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                  (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  AuthChallenge.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = challenge_.toBuilder();
                  }
                  challenge_ = input.readMessage(AuthChallenge.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(challenge_);
                    challenge_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  AuthResponse.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = response_.toBuilder();
                  }
                  response_ = input.readMessage(AuthResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(response_);
                    response_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  AuthError.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = error_.toBuilder();
                  }
                  error_ = input.readMessage(AuthError.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(error_);
                    error_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                    new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (DeviceAuthMessage.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.thirdegg.chromecast.api.v2.DeviceAuthMessage)
    private static final DeviceAuthMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DeviceAuthMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static DeviceAuthMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeviceAuthMessage> PARSER;

    public static com.google.protobuf.Parser<DeviceAuthMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
